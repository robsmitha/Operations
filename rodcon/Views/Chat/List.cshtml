@model ChatListViewModel
@{
    ViewData["Title"] = "List";
}

<div id="chat_window" class="px-2 pt-0 bg-white chat-window border">
    @if (Model?.Items != null && Model.Items.Count > 0)
    {
        foreach (var item in Model.Items)
        {
            <div class="media border-bottom py-1">
                <div class="media-body small">
                    <div class="row no-gutters">
                        <div class="col-auto">
                            <span class="fa-stack fa-2x">
                                <i class="fas fa-square fa-stack-2x"></i>
                                <i class="fas fa-user fa-stack-1x fa-inverse"></i>
                            </span>
                        </div>
                        <div class="col">
                            <small class="text-gray-dark">
                                @item.timeStamp.ToShortTimeString()
                            </small>
                            <br />
                            @item.query
                        </div>
                    </div>
                </div>
            </div>
            <div class="media border-bottom py-1">
                <div class="media-body small">
                    <div class="row no-gutters">
                        <div class="col-auto">
                            <span class="fa-stack fa-2x text-primary">
                                <i class="fas fa-square fa-stack-2x"></i>
                                <i class="fas fa-robot fa-stack-1x fa-inverse"></i>
                            </span>
                        </div>
                        <div class="col">
                            <small class="text-gray-dark">
                                @item.timeStamp.ToShortTimeString()
                            </small>
                            <br />
                            @item.reply.message

                            @switch (item.topScoringIntent.intent)
                            {
                                case rodcon.Services.LanguageUnderstandingService.INTENT_CHECK_STOCK:
                                    break;
                                case rodcon.Services.LanguageUnderstandingService.INTENT_CHECK_WEATHER:
                                    break;
                                case rodcon.Services.LanguageUnderstandingService.INTENT_GREETING:
                                    break;
                                case rodcon.Services.LanguageUnderstandingService.INTENT_NONE:
                                    break;
                                default:
                                    break;
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <div class="media border-bottom py-1">
            <div class="media-body small">
                <div class="row no-gutters">
                    <div class="col-auto">
                        <span class="fa-stack fa-2x">
                            <i class="fas fa-square fa-stack-2x"></i>
                            <i class="fas fa-robot fa-stack-1x fa-inverse"></i>
                        </span>
                    </div>
                    <div class="col">
                        <small class="text-gray-dark">
                            @DateTime.Now.ToShortTimeString()
                        </small>
                        <br />
                        Welcome, Non-Sequitur. Please ask me about the weather or stocks.
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script src="~/js/Chat/List.cshtml.js"></script>