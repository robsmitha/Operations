@model RegisterViewModel

@{
    ViewData["Title"] = "Store";
}

<h1 class="mb-3 font-weight-light">@ViewData["Title"]</h1>
<div class="row">
    <div class="col-md-4 order-md-2 mb-2">
        <div id="div_cart"></div>
    </div>
    <div class="col-md-8 order-md-1">
        <div id="div_list"></div>
    </div>
</div>
<div class="my-5 text-center">
    <p class="lead">
        Feel free to create as many fake orders as you want!
    </p>
</div>
<div id="modal_edit_register" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Register</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="$('#edit_register').html('')">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div id="div_edit_register"></div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("AddLineItem", "Register", FormMethod.Post, new { id = "form_add_item" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.CurrentOrderID, new { @class = "current-order-id" })
    @Html.HiddenFor(m => m.SelectedItemID, new { id = "add_item_id" })
}
@using (Html.BeginForm("RemoveItem", "Register", FormMethod.Post, new { id = "form_remove_item" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.CurrentOrderID, new { @class = "current-order-id" })
    @Html.HiddenFor(m => m.SelectedItemID, new { id = "remove_item_id" })
}
@using (Html.BeginForm("RemoveLineItem", "Register", FormMethod.Post, new { id = "form_remove_line_item" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.CurrentOrderID, new { @class = "current-order-id" })
    @Html.HiddenFor(m => m.SelectedItemID, new { id = "remove_line_item_id" })
}

@section Scripts{
    <script src="~/js/Register/Index.cshtml.js"></script>
}